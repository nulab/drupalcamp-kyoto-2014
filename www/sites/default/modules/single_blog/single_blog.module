<?php 
/**
 * @file
 * Enables a single-user blog.
 */

define('SINGLE_BLOG_NODE_TYPE', 'article');
define('SINGLE_BLOG_LIST_COUNT', 3);
define('SINGLE_BLOG_DATE_FORMAT', 'F d, Y');

/**
 * Returns a list of blog entries.
 *
 * @param $number
 *   The number of blog entries to return.
 * @return
 *   A result set object containing the list of blog entries.
 */
function single_blog_list($number) {
  // Use the Database API to retrieve our data.
  // @see http://drupal.org/node/310069
  $query = db_select('node', 'n')
    ->fields('n', array('nid', 'title', 'created', 'uid'))
    ->condition('type', SINGLE_BLOG_NODE_TYPE)
    ->condition('status', 1)
    ->orderBy('created', 'DESC')
    ->range(0, $number)
    ->addTag('node_access')
    ->execute();
  return $query;
}

/**
 * Implements hook_block_info().
 */
function single_blog_block_info() {
  $blocks = array();
  // The array key defines the $delta parameter used in all
  // other block hooks.
  $blocks['recent'] = array(
    'info' => t('Recent blog posts'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * @pararm $delta
 *    The name of the requested block.
 *
 */
function single_blog_block_view($delta = '') {
  $block = array(
    'subject' => '',
    'content' => '',
  );

  // Check which block is being requested.
  if ($delta == 'recent') {
    $block['subject'] = t('Recent blog posts');
    if (user_access('access content')) {
      $result = single_blog_list(SINGLE_BLOG_LIST_COUNT);
      $items = array();
      foreach ($result as $node) {
        $items[] = array(
//          'data' => l($node->title, 'node/' . $node->nid),
          'data' => array(
            '#theme' => 'single_blog_block_item',
            '#node' => $node,
          ),
          'class' => array('node-' . $node->nid),
        );
      }
    }

    if (!empty($items)) {
      $block['content']['list'] = array(
        '#theme' => 'item_list__single_blog',
        '#items' => $items,
        '#pre_render' => array('single_blog_item_list_child_render'),        
      );
      $block['content']['more'] = array(
        '#theme' => 'more_link',
        '#url' => 'blog',
        '#title' => t('Read the latest blog entries.'),
      );
      // Add a CSS file to style the block.
      $block['content']['#attached']['css'][] = drupal_get_path('module', 'single_blog') . '/single-blog.css';
//      $block['content'] = theme('item_list', array('items' => $items));
    }
  }

  return $block;    
}

/**
 * Render the child elements of theme_item_list() before its
 * data is themed.
 */
function single_blog_item_list_child_render($elements) {
  foreach (array_keys($elements['#items']) as $key) {
    if (is_array($elements['#items'][$key]['data'])) {
      $elements['#items'][$key]['data'] = drupal_render($elements['#items'][$key]['data']);
    }
  }
  return $elements;
}

/**
 * Implements hook_theme().
 */
function single_blog_theme($existing, $type, $theme, $path) {
  return array(
    'single_blog_block_item' => array(
      'variables' => array(
        'node' => NULL,
      ),
      'template' => 'single-blog-block-item',
    ),
  );
}

/**
 * Preprocesses single blog block item variables.
 */
function template_preprocess_single_blog_block_item(&$variables) {
  $node = $variables['node'];
  $variables['title'] = array(
    '#type'  => 'link',
    '#title' => $node->title,
    '#href'  => 'node/' . $node->nid,
  );
  $variables['created'] = $node->created;
  $variables['date'] = format_date($node->created, 'custom', SINGLE_BLOG_DATE_FORMAT);
  $variables['user'] = user_load($node->uid);
  $variables['name'] = theme('username', array('account' => $variables['user']));
}




